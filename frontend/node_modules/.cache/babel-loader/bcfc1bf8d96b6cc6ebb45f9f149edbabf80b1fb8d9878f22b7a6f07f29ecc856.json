{"ast":null,"code":"var _jsxFileName = \"/Users/olivergorgiev/Desktop/Learning React Resources/Event Router with Node js/frontend/src/pages/EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useLoaderData, useParams } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const {\n    eventId\n  } = useParams();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventDetailPage, \"pz7E2TiiAPhKzQQng2F27O+MlEI=\", false, function () {\n  return [useParams, useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","useLoaderData","useParams","EventItem","json","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","eventId","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/Users/olivergorgiev/Desktop/Learning React Resources/Event Router with Node js/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import React from \"react\";\nimport { useLoaderData, useParams } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { json } from \"react-router-dom\";\n\nfunction EventDetailPage() {\n  const { eventId } = useParams();\n  const data = useLoaderData();\n\n  return (\n    <>\n      <EventItem event={data} />\n    </>\n  );\n}\n\nexport default EventDetailPage;\n\nexport async function loader({ request, params }) {\n  const id = params.eventId;\n\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n\n  if (!response.ok) {\n    throw json(\n      { message: \"Could not fetch details for selected event.\" },\n      { status: 500 }\n    );\n  } else {\n    return response;\n  }\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,SAAS,QAAQ,kBAAkB;AAC3D,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAQ,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC/B,MAAMU,IAAI,GAAGX,aAAa,CAAC,CAAC;EAE5B,oBACEK,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACH,SAAS;MAACW,KAAK,EAAEF;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC1B,CAAC;AAEP;AAACR,EAAA,CATQD,eAAe;EAAA,QACFP,SAAS,EAChBD,aAAa;AAAA;AAAAkB,EAAA,GAFnBV,eAAe;AAWxB,eAAeA,eAAe;AAE9B,OAAO,eAAeW,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMC,EAAE,GAAGD,MAAM,CAACX,OAAO;EAEzB,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,EAAE,CAAC;EAElE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMtB,IAAI,CACR;MAAEuB,OAAO,EAAE;IAA8C,CAAC,EAC1D;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAAC,IAAAL,EAAA;AAAAU,YAAA,CAAAV,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}